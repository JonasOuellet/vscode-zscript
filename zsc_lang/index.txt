/********************************
This file is automatically generated.
DO NOT MODIFY THIS FILE

ZScript Command Definitions
http://docs.pixologic.com/user-guide/customizing-zbrush/zscripting/command-reference/
********************************/


/*****************************
Creates an interactive push button (can be placed anywhere but advise Top Level).

Example:

[IButton, "Click Me", , [MessageOK, YouClicked]]

Creates an interactive button with “Click Me” text which will display a “YouClicked”
message when pressed (Top Level).

[IButton, ???, "This is a macro button", ...commands...]

The special Button name ??? indentifies this as a Macro. If the zscript text file is
placed in the ZStartup\Macros folder, ZBrush will automatically load the zscript; the file
name will show as the Button name.

*****************************/
[IButton, Button name, Popup info Text, Commands group to execute when button is pressed,
Initially Disabled? (0:Enabled(ByDefault) NonZero:Disabled), Button width in pixels
(0:AutoWidth NonZero:Specified width), Optional hotkey, Optional button icon (.psd .bmp +
.pct for Mac Systems), Button height in pixels (0:AutoHeight NonZero:Specified height)]


/*****************************
Creates an interactive slider (Top Level).

Example:

[ISlider, ChangeMe, 12, 1, 0, 100, , [MessageOk, ThankYou]]

Creates an interactive slider with initial value of 12, range of 0 to 100 and “ChangeMe”
text which will display a “Thankyou” message when its value is changed

*****************************/
[ISlider, Slider name, CurValue, Resolution, MinValue, MaxValue, Popup info Text, Commands
group to execute when value is changed, Initially Disabled? (0:Enabled(ByDefault)
NonZero:Disabled), Slider width in pixels (0:AutoWidth NonZero:Specified width)]


/*****************************
Creates an interactive switch (Top Level).

Example:

[ISwitch, ClickMe, 1, "Info text", [MessageOK, On], [MessageOK, Off]]

Creates an interactive switch with “ClickMe” label which will display an “On” message when
pressed and an “Off” message when unpressed.

<strong>Note</strong>: for zplugins, it is best to use the [IEnable] command for each
switch (placed at the end of the zscript) to make sure switches do not become disabled
when other plugins are loaded.

*****************************/
[ISwitch, Switch name, Initial state (1:pressed, 0:unpressed), Popup info Text, Commands
group to execute when button is pressed, Commands group to execute when button is
unpressed, Initially Disabled? (0:Enabled(ByDefault) NonZero:Disabled), Switch width in
pixels (0:AutoWidth NonZero:Specified width)]


/*****************************
Adds a subpalette to ZBrush interface. Output: Returns 1 if subpalette added successfully.
Returns 0 if subpalette could not be added or if it already exsists.

Example:

[ISubPalette, "ZPlugin:My Plugins"]

Creates a “My Plugins” subpalette within the ZPlugin palette. This command is essential
for creating a zscript plugin.

*****************************/
[ISubPalette, Subpalette name, Title mode? (0:Show Title and minimize button(ByDefault)
1:Show Title without minimize button 2:Hide Title ), Optional subpalette gray-scale
(8-bits) icon (Standard size of 20x20 pixels), Left Inset (0:default), Right Inset
(0:default), Left Top (0:default), Right Bottom (0:default)]


/*****************************
Locates a ZBrush interface item (Top Level).

Example:

[ButtonFind, Document:Width, Text]

Locates the width button in the Document menu

*****************************/
[ButtonFind, Interface item path, Button name, Initially Disabled? (0:Enabled(ByDefault)
NonZero:Disabled)]


/*****************************
Locates and presses a ZBrush interface item (Top Level).

Example:

[ButtonPress, Tool:Sphere3D, Text]

Locates the Sphere3D button in the Tool menu and presses it making the Sphere3D the active
tool

*****************************/
[ButtonPress, Interface item path, Button name, Initially Disabled? (0:Enabled(ByDefault)
NonZero:Disabled)]


/*****************************
Locates and sets a new value to a ZBrush interface item (Top Level).

Example:

[ButtonSet, Document:Width, 123, Text]

Locates the Width slider in the Document menu and enters “123” as its value

*****************************/
[ButtonSet, Interface item path, Value, Button name, Initially Disabled?
(0:Enabled(ByDefault) NonZero:Disabled)]


/*****************************
Locates and unpresses a ZBrush interface item (Top Level).

Example:

[ButtonUnPress, Layer:Modifiers:W, Text]

Locates the W button in the Modifiers submenu of the Layer menu and unpresses it

*****************************/
[ButtonUnPress, Interface item path, Button name, Initially Disabled?
(0:Enabled(ByDefault) NonZero:Disabled)]


/*****************************
Displays a note to the user. Output: If the note has UI buttons then the return value of
the pressed buttons (1=1st button, 2=2nd button …), otherwise the return value will be
zero (Sub-Level only).

Example:

[Note, "Hello There"]

Displays a message to the user with “Hello There” as the text.

*****************************/
[Note, "Text line", Optional path1 of an interface item to be pointed out (default:none),
Display Duration (in seconds) (0:wait for user action(default), -1:combine with next note
command), Popup background color (0x000000&lt;-&gt;0xffffff, default:0x606060, 0:No
Background), Prefered distance of the note from the specified interface item (default:48),
Prefered Note width (in pixels, default:400), optional marked windows fill color
(0x000000&lt;-&gt;0xffffff or (blue+(green*256)+(red*65536))(Omitted value:No fill)),
Frame horizontal size (1:Max width (default)), Frame vertical size (1:Max height
(default)), Frame left side (0:left (default), .5:center, 1:right) Omit value for
horizontal autocentering, Frame top side ( 0:top (default), .5:center, 1:bottom )Omit
value for vertical auto-centering, Optional icon file name]


/*****************************
Displays a note in progress bar (Sub-Level only).

Example:

[NoteBar, ”ZScript is calculating, Please wait..."]

Displays a progress bar note “ZScript is calculating. Please wait…”.

*****************************/
[NoteBar, The Message that will be shown (use empty string to clear current note),
Optional progress-bar value (0:Min, 1:Max)]


/*****************************
Defines a button to be included within the next Note to be shown (Sub-Level only).

Example:

[NoteIButton, "OK"] 

Defines an “OK” note button.

*****************************/
[NoteIButton, Button name, Optional button icon, Initially Pressed? (default:unpressed),
Initially Disabled? (default:enabled), Optional button H relative position (Positive
value:offset from left, Negative value:offset from right, 0:automatic), Optional button V
relative position (Positive value:offset from top, Negative value:offset from bottom,
0:automatic), Optional button width in pixels (default:automatic), Optional button height
in pixels (default:automatic), Optional button color (0x000000&lt;-&gt;0xffffff or
(blue+(green*256)+(red*65536))), Optional text color (0x000000&lt;-&gt;0xffffff or
(blue+(green*256)+(red*65536))), Optional background opacity (default:1), Optional text
opacity (default:1), Optional image opacity (default:1)]


/*****************************
Returns the value of am NoteIButton which was shown in the last displayed Note. Output:
The item value.

Example:

[NoteIGet, 1]

Returns the value of the 1st note button or switch.

[NoteIGet, "Double"]

Returns the value of the note button or switch named “Double”.

*****************************/
[NoteIGet, Note-button index (1:1st) or its name]


/*****************************
Define a switch-button to be included within the next Note to be shown (Sub-Level only).

Example:

[NoteISwitch, "Double Sided"]

Defines a “Double Sided” note switch-button.

*****************************/
[NoteISwitch, Switch name, Optional button icon, Initially Pressed? (default:unpressed),
Initially Disabled ? (default:enabled), Optional button H relative position (Positive
value:offset from left, Negative value:offset from right, 0:automatic), Optional button V
relative position (Positive value:offset from top, Negative value:offset from bottom,
0:automatic), Optional button width in pixels (default:automatic), Optional button height
in pixels (default:automatic), Optional button color (0x000000&lt;-&gt;0xffffff or
(blue+(green*256)+(red*65536))), Optional text color (0x000000&lt;-&gt;0xffffff or
(blue+(green*256)+(red*65536))), Optional background opacity (default:1), Optional text
opacity (default:1), Optional image opacity (default:1)]


/*****************************
Displays a user message with a single OK button

Example:

[MessageOK, "Hello There"]

Displays a message to the user with “Hello There” as the text, and waits for the user to
click the “OK” button (Sub-Level only).

*****************************/
[MessageOK, The Message that will be shown, The Title of the message]


/*****************************
Displays a user message with CANCEL and OK buttons Output: Returns the button that the
user clicked. (0=CANCEL, 1=OK)(Sub-Level only).

Example:

[MessageOkCancel, "Delete this image?"]

Displays a message to the user with “Delete this image?” as the text, and waits for the
user to click the “OK” or “Cancel” button.

*****************************/
[MessageOKCancel, The Message that will be shown, The Title of the message]


/*****************************
Displays a user message with YES and NO buttons Output: Returns the button that the user
clicked (0=NO, 1=YES)(Sub-Level only).

Example:

[MessageYesNo, "Are you sure?"]

Displays a message to the user with “Are you sure?” as the text, and waits for the user to
click the “YES” or “NO” button.

*****************************/
[MessageYesNo, The Message that will be shown, The Title of the message]


/*****************************
Displays a user message with YES, NO and CANCEL buttons Output: Returns the button that
the user clicked (0=NO, 1=YES CANCEL=-1)(Sub-Level only).

Example:

[MessageYesNoCancel, "Are you sure?"]

Displays a message to the user with “Are you sure?” as the text, and waits for the user to
click the “YES”, “NO” or “CANCEL” button.

*****************************/
[MessageYesNoCancel, The Message that will be shown, The Title of the message]


/*****************************
Emulates a click within the current canvas area

Example:

[CanvasClick, 10, 10, 20, 20]

Emulates a canvas click at 10, 10 with a drag to 20, 20 before releasing the mouse button

*****************************/
[CanvasClick, X1, Y1, X2, Y2, X3, Y3, X4, Y4, X5, Y5, X6, Y6, X7, Y7, X8, Y8]


/*****************************
Pans (Scrolls) the active document view

Example:

[CanvasPanSet, 320, 240]

Scrolls the center of a 640×480 canvas to be at the center of the document view

[CanvasPanSet, 0, 0]

Scrolls the top left corner of the canvas to be at the center of the document view

*****************************/
[CanvasPanSet, H value (0:left of document), V value (0:top of document)]


/*****************************
Emulates a brush stroke within the current canvas area

Example:

[CanvasStroke, [StrokeGetLast]]

Replays the last stroke

*****************************/
[CanvasStroke, StrokeData, Delayed update until end of stroke, Rotation, HScale, VScale,
HOffset, VOffset]


/*****************************
Emulates multiple brush strokes within the current canvas area

Example:

[CanvasStrokes, [Var, loadedStrokes]]

Replays “loadedStrokes” in the canvas area

*****************************/
[CanvasStrokes, StrokesData, Delayed update until end of stroke, Rotation, HScale, VScale,
HOffset, VOffset, HRotateCenter, VRotateCenter]


/*****************************
Sets the zoom factor of the active document view

Example:

[CanvasZoomSet, 2]

Sets the zoom value to 2 (each Pixol is shown twice as large)

[CanvasZoomSet, .5]

Sets the zoom value to .5 (half-antialiased zoom mode)

*****************************/
[CanvasZoomSet, Zoom factor]


/*****************************
Retrieves information about a specified Pixol Output: The value of the specified Pixol

Example:

[PixolPick, 1, 10, 20]

Returns the Z(depth) value at 10, 20 canvas position.

*****************************/
[PixolPick, Component Index: 0:CompositeColor (0x000000&lt;-&gt;0xffffff or
(red*65536+green*256+blue)); 1:Z(-32576 to 32576); 2:Red(0 to 255); 3:Green(0 to 255);
4:Blue(0 to 255); 5:MaterialIndex(0 to 255); 6:XNormal(-1 to 1); 7:YNormal(-1 to 1);
8:ZNormal(-1 to 0), H Position, V Position]


/*****************************
Retrieves the information from a specified Stroke-type Variable Output: StrokeInfo
resultInfo number: 0=PointsCount 1=IndexedHPos 2=IndexedVPos 3=IndexedPressure 4=MinH

5=MinV 6=MaxH 7=MaxV 8=MaxRadius 9=MaxRadiusPointlndex 10=MaxDeltaH 11=MaxDeltaV

12=Total Distance 13=Twirl Count 14=DeducedZValue 15=IndexedkeyPress

Example:

[StrokeGetInfo, [StrokeGetLast], 0]

Returns the number of points in the last drawn brush stroke

*****************************/
[StrokeGetInfo, Stroke-type Variable, Info number, Point index (0 based)]


/*****************************
Loads a brush-stroke text file Output: StrokeData

Example:

[VarSet, Strokel, [StrokeLoad, "Star.txt"]]

Loads the “Star.txt” file, creates a BrushStroke object and assigns it to “Strokel”
variable.

[CanvasStroke, [StrokeLoad, "Star.txt"]]

Loads the “Star.txt” file, creates a BrushStroke object and applies it to the canvas.

*****************************/
[StrokeLoad, FileName(.txt)]


/*****************************
Loads a brush-strokes text file Output: StrokesData

Example:

[VarSet, Strokel, [StrokesLoad, "Star.txt"]]

Loads the “Star.txt” file, creates a BrushStrokes object and assigns it to “Strokel”
variable.

[CanvasStroke, [StrokesLoad, "Star.txt"]]

Loads the “Star.txt” file, creates a BrushStrokes object and applies it to the canvas.

*****************************/
[StrokesLoad, FileName(.txt)]


/*****************************
Gets current transformation values (Sub-Level only).

Example:

[TransformGet, xPos, yPos, zPos, xSc, ySc, zSc, xRot, yRot, zRot]

sets the variables xPos, yPos, zPos, xSc, ySc, zSc, xRot, yRot and zRot to the 3D Position,
, Scale and Rotation values of the last drawn object or current floating object.

*****************************/
[TransformGet, xPosition, yPosition, zPosition, xScale, yScale, zScale, xRotate, yRotate,
zRotate]


/*****************************
Sets new transformation values (Sub-Level only).

Example:

[TransformSet, (Document:Width*.5), (Document:Height*.5), 0, 100, 100, 100, 0, 0, 0]

sets the 3D values of the last drawn object or current floating object to:

Position – XY center of the canvas and Z depth 0

Scale – uniform scale of 100

Rotation – default rotation of 0, 0, 0

*****************************/
[TransformSet, xPosition, yPosition, zPosition, xScale, yScale, zScale, xRotate, yRotate,
zRotate]


/*****************************
Emulates a click within a specified ZBrush interface item (Sub-Level only).

Example:

[IClick, LIGHT:Intensity, 55, 10]

Emulates a click at 55, 10 position

[IClick, LIGHT:Intensity, 55, 10, 10, 20, 10]

Emulates a click at 10, 10 with a drag to 20, 10 before releasing the mouse button

*****************************/
[IClick, Interface item path, X1, Y1, X2, Y2, X3, Y3, X4, Y4, X5, Y5, X6, Y6, X7, Y7]


/*****************************
Closes an interface item.

Example:

[IClose, ZScript:Play]

deletes the ZScript:Play window

*****************************/
[IClose, Interface item path, Show Zoom Rectangles?, Target parent window?]


/*****************************
Sets the active color to a new value

Example:

[IColorSet, 255, 0, 0]

sets the main interface active color to red

*****************************/
[IColorSet, Red (0-255), Green (0-255), Blue (0-255)]


/*****************************
Sets ZBrush internal version-configuration

Example:

[IConfig, 2.0]

sets the interface to 2.0 configuration

[IConfig, 3.1]

sets the interface to 3.1 configuration

*****************************/
[IConfig, ZBrush version-configuration]


/*****************************
Disables a ZScript interface item (can only be used for ZScript-generated interface items)

Example:

[IDisable, Zscript:DoIt]

Disables the “DoIt” ZScript interface item

[IDisable, l]

Disables the next interface item in the ZScript window

*****************************/
[IDisable, Window path, Window ID or relative windowID(-100&lt;-&gt;100)]


/*****************************
Enables a ZScript interface item (can only be used for ZScript-generated interface items)

Example:

[IEnable, ZScript:DoIt]

Enables the “DoIt” ZScript interface item

[IEnable, 1]

Enables the next interface item in the ZScript window

*****************************/
[IEnable, Window path, Window ID or relative windowID(-100&lt;-&gt;100)]


/*****************************
Verifies that a specified interface item exists. Output: 1 if item exists, 0 otherwise

Example:

[IExists, TOOL:Sphere3D]

returns 1 if TOOL:Sphere3D exists, returns 0 otherwise.

*****************************/
[IExists, Interface item path]


/*****************************
Fades in ZBrush window from black.

Example:

[IFadeIn, .35]

fade in from black, speed = 0.35 seconds (*ZBrush 3 only).

*****************************/
[IFadeIn, Fade in speed in secs. (default:.5 secs)]


/*****************************
Fades out ZBrush window to black.

Example:

[IFadeOut, .35]

fade out to black, speed = 0.35 seconds (*ZBrush 3 only).
&nbsp;

*****************************/
[IFadeOut, Fade out speed in secs. (default:.5 secs)]


/*****************************
Returns the current value of a ZBrush or ZScript interface item Output: The item value

Example:

[IGet, Draw:Width]

Returns the current value of the Width slider in the Draw menu

*****************************/
[IGet, Interface item path]


/*****************************
Returns the status flags of the specified interface item Output: The flags

Example:

[IGetFlags, windowID]

Returns the info of specified windowID interface item

*****************************/
[IGetFlags, Interface item path]


/*****************************
Returns the hotkey of the specified interface item Output: The Hotkey

Example:

[IGetHotkey, windowID]

Returns the hotkey of specified windowID interface item

*****************************/
[IGetHotkey, Interface item path]


/*****************************
Returns the window ID code of the specified interface item Output: The Title

Example:

[IGetID, Tool:LoadTool]

Returns the id code of the Tool:LoadTool interface item

*****************************/
[IGetID, Interface item path]


/*****************************
Returns the info (popup info) of the specified interface item Output: The info

Example:

[IGetInfo, windowID]

Returns the info of specified windowID interface item

*****************************/
[IGetInfo, Interface item path]


/*****************************
Returns the maximum possible value of a ZBrush or ZScript interface item Output: The item
maximum value

Example:

[IGetMax, Draw:Width]

Returns the maximum value of the Width slider in the Draw menu

*****************************/
[IGetMax, Interface item path]


/*****************************
Returns the minimum possible value of a ZBrush or ZScript interface item Output: The item
minimum value

Example:

[IGetMin, Draw:Width]

Returns the minimum value of the Width slider in the Draw menu

*****************************/
[IGetMin, Interface item path]


/*****************************
Returns the the secondary value of a 2D interface item Output: The item value

Example:

[IGetSeconday, Light:LightPlacement]

Returns the secondary value of the Light:LightPlacement control

*****************************/
[IGetSecondary, Interface item path]


/*****************************
Returns the Enabled/Disabled status of a ZBrush or ZScript interface item Output: The item
status 0=Disabled 1=Enabled

Example:

[IGetStatus, Transform:Move] 

Returns the current status of the Move button in the Transform menu

*****************************/
[IGetStatus, Interface item path]


/*****************************
Returns the title of the specified interface item Output: The Title of the button

Example:

[IGetTitle, windowID]

Returns the title of specified windowID interface item

*****************************/
[IGetTitle, Interface item path, Return full path? (0:no nonZero:yes)]


/*****************************
Returns the pixel-height of an interface item. Output: The height of the interface item.

Example:

[IHeight, Tool:SimpleBrush]

Returns the height of the “Tool:SimpleBrush” interface item

*****************************/
[IHeight, Interface item path]


/*****************************
Hides an interface item.

Example:

[IHide, Draw:Width]

Hides the “Draw:Width” window

*****************************/
[IHide, Interface item path, Show Zoom Rectangles?, Target parent window?]


/*****************************
Returns the H position of the interface item in Canvas or Global coordinates. Output: The
H position of the interface item.

Example:

[IHPos, Draw:Width, 1]

Returns the H position of the “Draw:Width” interface Item in Global coordinates

*****************************/
[IHPos, Interface item path, Global coordinates?(set value to non-zero for global
coordinates; default:Canvas coordinates)]


/*****************************
Simulates a key press

Example:

[IKeyPress, 'x']

Simulates “x” key press

[IKeyPress, CTRL+'z']

Simulates “Ctrl+z” key press

*****************************/
[IKeyPress, The key to press (with an optional CTRL/CMD, ALT/OPT, SHIFT or TAB
combination.), Commands group to execute while the key is pressed, Optional H cursor
position prior to key press, Optional V cursor position prior to key press]


/*****************************
Locks an interface item.

Example:

[ILock, ZScript:DoIt]

locks the “DoIt” Zscript window interface item (*ZBrush 3 only).

[ILock, 1]

locks the next interface item (*ZBrush 3 only).
&nbsp;

*****************************/
[ILock, Window path, Window ID or relative windowID(-100&lt;-&gt;100)]


/*****************************
Locates an interface item and (if possible) maximize its size.

Example:

[IMaximize, Tool:, 1]

Expand the TOOL palette and all of its sub palettes

*****************************/
[IMaximize, Interface item path, Maximizeall sub palettes? (0:no, NonZero:yes)]


/*****************************
Locates an interface item and (if possible) minimize its size.

Example:

[IMinimize, Tool:, 1]

Closes the TOOL palette and all of its sub palettes

*****************************/
[IMinimize, Interface item path, Minimize all sub palettes? (0:no, NonZero:yes)]


/*****************************
Returns the current modifiers binary state of a ZBrush or ZScript interface item Output:
The item value

Example:

[IModGet, Tool:Modifiers:Deformation:Rotate]

Returns the current modifiers of the Rotate slider in the Tool menu. Each modifier is
identified by its binary value such as lst=1, 2nd=2, 3rd=4, 4th=8

*****************************/
[IModGet, Interface item path]


/*****************************
Sets the modifiers binary value of a ZBrush or a ZScript interface item

Example:

[IModSet, Tool:Modifiers:Deformation:Rotate, 2]

Sets the modifiers of the Rotate slider in the Tool menu to 2. Each modifier is identified
by its binary value such as lst=1, 2nd=2, 3rd=4, 4th=8

*****************************/
[IModSet, Interface item path, value]


/*****************************
Presses a ZBrush or ZScript interface item (Sub-Level only).

Example:

[IPress, Tool:Cube3D]

Presses the Cube3D button in the Tool menu making the Cube3D the active tool

*****************************/
[IPress, Interface item path]


/*****************************
Interface Reset. Output: Returns the button that the user clicked ( 0=NO, 1=YES )
(Sub-Level only).

Example:

[IReset]

Resets the interface to a default state

*****************************/
[IReset, Optional item to reset (default:All). (0:All, 1:Interface, 2:Document, 3:Tools,
4:Lights, 5:Materials, 6:Stencil), Optional ZBrush version-configuration]


/*****************************
Returns 1 if the specified ZBrush or ZScript interface item is currently disabled, returns
0 otherwise Output: The item ‘Disabled’ status (1=Disabled 0=Enabled)

Example:

[IsDisabled, Transform:Move]

Returns 1 if the “Transform:Move” interface item is currently disabled, returns 0
otherwise

*****************************/
[IsDisabled, Interface item path]


/*****************************
Returns 1 if the specified ZBrush or ZScript interface item is currently enabled, returns
0 otherwise Output: The item ‘Enabled’ status (1=Enabled 0=Disabled)

Example:

[IsEnabled, Transform:Move]

Returns 1 if the “Transform:Move” interface item is currently enabled, returns 0 otherwise

*****************************/
[IsEnabled, Interface item path]


/*****************************
Sets a new value to a ZBrush or ZScript interface item

Example:

[ISet, Draw:Width, 50]

Sets the Width slider in the Draw menu to 50

*****************************/
[ISet, Interface item path, value, Secondary value]


/*****************************
Sets the hotkey of the specified interface item

Example:

[ISetHotkey, windowID, 'k']

Sets “k” as the hotkey for the specified windowID interface item

*****************************/
[ISetHotkey, Interface item path, Hotkey(0:no Hotkey)]


/*****************************
Sets the maximum value for an ISlider interface item (can only be used for
ZScript-generated interface items)

Example:

[ISetMax, Zscript:Counter, 10]

Sets the maximum value of “ZScript:Counter” interface item to 10

*****************************/
[ISetMax, Interface item path, New max value]


/*****************************
Sets the minimum value for an ISlider interface item (can only be used for
ZScript-generated interface items)

Example:

[ISetMin, Zscript:Counter, 10]

Sets the minimum value of “ZScript:Counter” interface item to 10

*****************************/
[ISetMin, Interface item path, New min value]


/*****************************
Locates an interface item and makes it visible.

Example:

[IShow, Draw:Width]

Makes the “Draw:Width” item visible. If necessary the “Draw” palette will be opened

*****************************/
[IShow, Interface item path, Show Zoom Rectangles?, Target parent window?]


/*****************************
Temorarily sets the status of ShowActions

Example:

[IShowActions, 0]

Temporarily disables ShowActions

*****************************/
[IShowActions, The ShowActions status.(0:Disable ShowActions, Positive value:enable show
actions, Negative value:Reset ShowActions)]


/*****************************
Returns 1 if the specified ZBrush or ZScript interface item is currently locked, returns 0
otherwiseOutput: The item ‘Locked’ status (1=Locked 0=Unlocked)

Example:

[IsLocked, Transform:Move]

returns 1 if the “Transform:Move” interface item is locked, returns 0 otherwise (*ZBrush 3
only).

*****************************/
[IsLocked, Interface item path]


/*****************************
Emulates a brush stroke within an interface item

Example:

[IStroke, [StrokeLoad, "CurvePoints.txt"]]

Loads the “Curvepoints.txt” file, creates a BrushStroke and applies it to the interface
item

*****************************/
[IStroke, Interface item path, StrokeData]


/*****************************
Returns 1 if the specified ZBrush or ZScript interface item is currently unlocked, returns
0 otherwiseOutput: The item ‘Unlocked’ status (1=Unlocked 0=locked)

Example:

[IsUnLocked, Transform:Move]

returns 1 if the “Transform:Move” interface item is unlocked, returns 0 otherwise (*ZBrush
3 only).

*****************************/
[IsUnlocked, Interface item path]


/*****************************
Toggles the state of a ZBrush or ZScript interface item

Example:

[IToggle, Draw:ZAdd]

Toggles the ZAdd button in the Draw menu turning ZAdd mode on and off

*****************************/
[IToggle, Interface item path]


/*****************************
Unlocks an interface item

Example:

[IUnLock, ZScript:DoIt]

unlocks the “DoIt” Zscript window interface item (*ZBrush 3 only).

[IUnLock, 1]

unlocks the next interface item (*ZBrush 3 only).

*****************************/
[IUnlock, Window path, Window ID or relative windowID(-100&lt;-&gt;100)]


/*****************************
Unpresses a ZBrush or ZScript interface item

Example:

[IUnPress, Layer:Modifiers:w]

Unpresses the W button in the Modifiers submenu of the Layer menu

*****************************/
[IUnPress, Interface item path]


/*****************************
Updates the ZBrush interface.

Example:

[IUpdate, 5]

Execute 5 interface-update cycles

*****************************/
[IUpdate, Repeat count (default:1), Redraw UI? (default:no, 1:yes)]


/*****************************
Returns the V position of the interface item in Canvas or Global coordinates. Output: The
V position of the interface item.

Example:

[IVPos, Draw:Width, 1]

Returns the V position of the “Draw:Width” interface Item in Global coordinates

*****************************/
[IVPos, Interface item path, Global coordinates? (set value to non-zero for global
coordinates, default:Canvas coordinates)]


/*****************************
Returns the pixel-width of an interface item. Output: The width of the interface item.

Example:

[IWidth, Tool:SimpleBrush]

with Returns the width of the “Tool:SimpleBrush” interface item.

*****************************/
[IWidth, Interface item path]


/*****************************
Returns ZBrush info. Output: Result value

Example:

[ZBrushInfo, 6]

returns the user’s operating system. Useful if there are different requirements for
running the zscript on different operating systems.

*****************************/
[ZBrushInfo, The info type. (0:version number 1:Demo/Beta/Full 2:Runtime seconds 3:Mem use
4:VMem Use 5:Free Mem 6:operating system (0:PC 1:Mac 2:MacOSX) 7:Unique session ID 8:Total
RAM)]


/*****************************
Sets the task-priority of ZBrush.

Example:

[ZBrushPrioritySet, 1]

sets ZBrush priority to above normal.

*****************************/
[ZBrushPrioritySet, The priority. -2:Low, -1:BelowNormal, 0:normal, 1:Above Normal,
2:High]


/*****************************
Returns the current H position of the mouse in Canvas or Global coordinates. Output: The H
position of the mouse

Example:

[MouseHPos]

Returns the current H position of the mouse

*****************************/
[MouseHPos, Global coordinates? (set value to non-zero for global coordinates,
default:Canvas coordinates)]


/*****************************
Returns the current V position of the mouse in Canvas or Global coordinates. Output: The V
position of the mouse

Example:

[MouseVPos]

Returns the current V position of the mouse

*****************************/
[MouseVPos, Global coordinates? (set value to non-zero for global coordinates,
default:Canvas coordinates)]


/*****************************
Sets the pen background color (Top Level).

Example:

[BackColorSet, 255, 255, 0]

sets the pen background color to yellow

*****************************/
[BackColorSet, Red, Green, Blue]


/*****************************
Displays a text line using the current Caption settings (Top Level).

Example:

[Caption, This Is A Caption]

displays “ThisIsACaption” using the Caption settings
&nbsp;

*****************************/
[Caption, Text]


/*****************************
Sets the color of the zscript window font (Top Level).

Example:

[FontSetColor, 255, 0, 0]

sets zscript window font to red

[FontSetColor, 255, 255, 255]

sets zscript window font to white

*****************************/
[FontSetColor, Red, Green, Blue]


/*****************************
Sets the opacity of the zscript window font (Top Level).

Example:

[FontSetOpacity, .25]

sets zscript window font opacity to 25%

[FontSetOpacity, 1]

sets zscript window font opacity to 100%

*****************************/
[FontSetOpacity, Opacity]


/*****************************
Sets the intensity of the zscript window font (Top Level).

Example:

[FontSetSize, 2]

sets zscript window font size to medium
&nbsp;

*****************************/
[FontSetSize, Size: 1:Small 2:Med 3:Large]


/*****************************
Sets the main interface color to a new value (Top Level).

Example:

[FrontColorSet, Text, 0, 0, 0]

sets the ZBrush interface main front color to black

*****************************/
[FrontColorSet, Description Text, Red, Green, Blue, Initially Disabled?
(0:Enabled(ByDefault) NonZero:Disabled)]


/*****************************
Displays a hot-key for the specified interface item (Top Level).

Example:

[HotKeyText, DOCUMENT:UNDO]

displays the hot key of the DOCUMENT:UNDO button using the Hotkey text settings

*****************************/
[HotKeyText, Interface item path]


/*****************************
Loads and displays an image (Top Level).

Example:

[Image, TestImage.psd]

Loads and displays TestImage.psd in the zscript window, center-aligned (default) in its
original size

*****************************/
[Image, FileName (.psd .bmp + .pct for Mac Systems), Align (0:center 1:left 2:right),
Resized Width]


/*****************************
Enables or Disables a ZScript interface item (can only be used for ZScript-generated
interface items).

Example:

[ISetStatus, ZScript:DoIt, 1]

Enables the “DoIt” ZScript interface item

[ISetStatus, ZScript:DoIt, 0]

Disables the “DoIt” ZScript interface item

*****************************/
[ISetStatus, Interface item path, New status ( 0:Disable NotZero:Enable )]


/*****************************
Sets the width of the page (Top Level).

Example:

[PageSetWidth, 300]

sets the zscript window display page width to a maximum of 300 pixels

*****************************/
[PageSetWidth, Preferred PageWidth]


/*****************************
Paints the background using the current background color (Top Level).

Example:

[PaintBackground, 10, 10, 10]

Fills the zscript window background with a dark gray color

*****************************/
[PaintBackground, Red, Green, Blue]


/*****************************
Draws a full page-width rectangle using the current background color (Top Level).

Example:

[PaintBackSliver, 20, 255, 255, 0]

Draws a yellow rectangle in the zscript window, full page-width and 20 pixels tall.

*****************************/
[PaintBackSliver, height, Red, Green, Blue]


/*****************************
Draws a rectangle (in the ZScript window) using the current pen color (Top Level).

Example:

[PaintRect, 80, 100]

Draws a rectangle in the zscript window, 80 pixels wide and 100 pixels tall using the
current pen color.

*****************************/
[PaintRect, Width, height, Red, Green, Blue]


/*****************************
Draws a rectangle with imbedded text (Top Level).

Example:

[PaintTextRect, 200, 100, "This is an Example"]

Draws a rectange in the zscript window, 200 pixels wide and 100 tall with “This is an
Example” inside it.

*****************************/
[PaintTextRect, Width, Height, Text]


/*****************************
Moves the pen a relative distance.

Example:

[PenMove, 40, 80]

moves the pen 40 pixels to the right and 80 pixels down in the zscript window.

Note: useful for arranging interface items in the zscript window.

*****************************/
[PenMove, Horizontal Offset, Vertical Offset]


/*****************************
Sets the pen main color .

Example:

[PenSetColor, 128, 128, 128]

sets pen color to medium gray.

*****************************/
[PenSetColor, Red, Green, Blue]


/*****************************
Modifies the setting of Title, SubTitle and Caption text.

Property Indexes:

0 = FontSetSize(1=small, 2=med, 3=large)

1 = alignments(0=center, 1=L, 2=R)

2 = Opacity(0-1)

3 = 0x0000000xffffff

4 = Border size

5 = BackColor1 (0x0000000xffffff)

6 = GradientMode (-1=None, 0=Flat, 1=HGrad, 2=VGrad, 3=DHGrad, 4=DVGrad)

7 = BackColor2 (0x0000000xffffff)

Example:

[PropertySet, Title, 1, 1]

sets left alignment for Title settings.

*****************************/
[PropertySet, The base command name (Title,SubTitle,Caption), Property Index, The new
Value]


/*****************************
Begins a collapsible section .

Example:

[SectionBegin, Chapterl2]

Begins a collapsible section in the zscript window with “Chapterl2” as the Title which
will expand/collapse to reveal/hide its contents when pressed.

*****************************/
[SectionBegin, Section Title, Initial state (1:Expanded, 0:Collapsed ), Popup Info Text,
Commands group to execute when expanding to reveal content, Commands group to execute when
collapsing to hide content, Initially Disabled? (0:Enabled(ByDefault) NonZero:Disabled)]


/*****************************
Displays a text line using the current SubTitle settings .

Example:

[SubTitle, "Chapter 23"]

displays “Chapter 23” in the zscript window using the SubTitle settings.

*****************************/
[SubTitle, Text]


/*****************************
Calculates the pixel-width of the specified string Output: Width of text in pixels .

Example:

[TextCalcWidth, "Test"]

returns the width in pixels of the string “Test”.

*****************************/
[TextCalcWidth, The text to be evaluated]


/*****************************
Displays a text line using the current Title settings .

Example:

[Title, "Hello"]

displays “Hello” in the zscript window using the Title settings.

*****************************/
[Title, Text]


/*****************************
Defines a variable (advised Top Level).

Example:

[VarDef, xPos, 1]

Defines a variable with the name “xPos” and initializes it to 1.

[VarDef, xPos(100)]

Defines a list variable named “xPos” with 100 items.

Note: the list index starts at 0, so xPos(99) is the hundredth item.

*****************************/
[VarDef, Variable name, Variable defaultValue]


/*****************************
Sets the value of a named variable (can be placed anywhere).

Example:

[VarSet, xPos, 42]

sets variable “xPos” to 42.

[VarSet, xPos, (Document:Width*.5)]

sets variable “xPos” to Document:Width multiplied by 0.5.

*****************************/
[VarSet, Variable name, New Value]


/*****************************
Copies items from a source list to a destination list

Example:

[VarListCopy, destList, 0, sourceList, 4, 3]

copies items 4-6 from sourceList to items 0-2 of destList.

*****************************/
[VarListCopy, Destination list, Destination initial index, Source list, Source initial
index, Number of items to copy.(if omitted or it is 0, then all items will be copied)]


/*****************************
Loads variable/s from a file Output: Number of loaded or verfied values

Example:

[VarLoad, userData, tempFile]

Sets variable named “userData” to value/s loaded from the “tempFile.zvr” file.

*****************************/
[VarLoad, Variable name, FileName, Verify only (1:Only Verify that a proper saved variable
file exists, 0:(default)Verifies and loads values)]


/*****************************
Saves variable value/s to file Output: Number of saved values

Example:

[VarSave, userData, tempFile]

Saves the current value/s of “userData” variable to “tempFile.zvr” file.

*****************************/
[VarSave, Variable name, FileName]


/*****************************
Asks user to input a string. Output: Returns the text typed by user or an empty string if
canceled.

Example:

[StrAsk, "Type text in here", "Please enter a file name"]

Displays a text input dialog and returns the string typed by user. Note: include both
initial string and title.

*****************************/
[StrAsk, Initial string, Title]


/*****************************
Returns specified portion of the input string Output: The extracted portion of the input
string.

Example:

[StrExtract, "abcdefgh", 3, 5]

Returns the “def” portion of the input string.

*****************************/
[StrExtract, Input string, Start character index (0:left), End character index (0:left)]


/*****************************
Locate a string within a string. Output: Returns the starting index of the 1st string
within the 2nd string. returns -1 if not found.

Example:

[StrFind, "Br", "ZBrush"]

Searches for “Br” within “ZBrush” and returns 1.

[StrFind, "Ba", "ZBrush"]

Searches for “Ba” within “ZBrush” and returns -1 (not found).

*****************************/
[StrFind, find this string, in this string, Optional start search index (default:0)]


/*****************************
Returns the character of the specified Ascii value. Output: The character of the specified
Ascii value.

Example:

[StrFromAsc, 65]

returns “A”.

*****************************/
[StrFromAsc, Input Ascii value]


/*****************************
Returns the number of characters in the input string. Output: Number of characters in the
input string.

Example:

[StrLength, "Hello"]

Returns 5 as the number of characters in “Hello”.

*****************************/
[StrLength, String to evaluate]


/*****************************
Returns the lowercase version of the input string. Output: The lowercase version of the
input string.

Example:

[StrLower, "ZBrush"]

returns “zbrush”.

*****************************/
[StrLower, Input string]


/*****************************
Combines two (or more) strings into one string. Output: The combined string. Note: result
string will not exceed 255 characters in length

Example:

[StrMerge, "Texture number ", "15", " is selected"]

returns the merged string: “Texture number 15 is selected”.

[StrMerge, ZTool, 27, .ztl]

returns the merged string: “ZTool27.ztl”.

*****************************/
[StrMerge, Str 1, Str 2, Optional Str 3, Opt Str 4, Opt Str 5, Opt Str 6, Opt Str 7, Opt
Str 8, Opt Str 9, Opt Str 10, Opt Str 11, Opt Str 12]


/*****************************
Returns the Ascii value of a character. Output: The Ascii value of a character.

Example:

[StrToAsc, "ZBrush"]

returns the Ascii value of “Z”.

[StrToAsc, "ZBrush", 2]

returns the Ascii value of “r”.

*****************************/
[StrToAsc, Input string, Optional character offset (default:0)]


/*****************************
Returns the uppercase version of the input string. Output: The uppercase version of the
input string.

Example:

[StrUpper, "ZBrush"]

returns “ZBRUSH”.

*****************************/
[StrUpper, Input string]


/*****************************
Executes the specified plugin file (DLL). Output: Returns the result value which was
returned by the executed routine. Returns zero if error

Example:

[FileExecute, PluginTest.dll, ShowMsg, "Hi There"]

Executed the “ShowMsg” routine of the “PluginTest.dll” plugin

*****************************/
[FileExecute, File name including the extension (such as plugin.dll ), Routine to call,
Optional text input, Optional number input, Optional memory block input, Optional memory
block output]


/*****************************
Check if a specific file exists. Output: Returns 1 if file exists. Returns zero if does
not exists

Example:

[FileExists, LargeImage.psd]

Returns 1 if “LargeImage.psd” exists or zero if file does not exist

*****************************/
[FileExists, File name including the extension (such as brush1.ztl )]


/*****************************
Retrieve information about a specified file. Output: returns the requested information or
zero if the file not found.

Property Indexes:

1 = file size (in mb)

2 -7 = Creation date: year, month(1-12), day, hour, minutes, seconds

8 -13 = Modified date: year, month(1-12), day, hour, minutes, seconds

14 -19 = Access date: year, month(1-12), day, hour, minutes, seconds

Example:

[FileGetInfo, LargeImage.psd, 1]

Returns the file size of the file named LargeImage.psd

*****************************/
[FileGetInfo, File name including extension (such as brush1.ztl), The information
requested index.]


/*****************************
Increments the index value contained within a filename string Output: Updated file Name.

Example:

[FileNameAdvance, "image01.psd"]

Adds 1 to the index of the string, i.e. if filename was image0l.psd it will be modified to
image02.psd

*****************************/
[FileNameAdvance, Base file name, Number of digits (0-4) (i.e. 3: 001 ), Add 'Copy'
string?(0:no, NonZero:yes)]


/*****************************
Asks user for a file name Output: Result file name or an empty string if user canceled
operation (Sub-Level only).

Example:

[FileNameAsk, "DXF(*.dxf)|*.dxf|OBJ(*.obj)|*.obj||", , "Please select a file to load..."]

Activates OpenDialog for a *.dxf or *.obj file to load. Sets the dialog title to “Please
select a file to load…”

[FileNameAsk, *.zvr, tempFile]

Activates SaveDialog with default “tempFile.zvr” file name.

*****************************/
[FileNameAsk, Extension list (up to 3 extensions), Default fileName for SaveDialog. Name
should be omitted for OpenDialog, Optional dialog title]


/*****************************
Extracts filename components. Output: The extracted filename component/s.

Example:

[FileNameExtract, fullFilePath, 2]

returns the name component of the input file path

[FileNameExtract, fullFilePath, 2+4]

returns the name+extension components of the input file path

*****************************/
[FileNameExtract, File name (Full path), Component specifier (1:path, 2:name, 4:ext)]


/*****************************
Combines a base filename with an index number Output: Combined file name Variable

Example:

[FileNameMake, Image.psd, 12]

Creates a string with “Image12.psd” as its value

*****************************/
[FileNameMake, Base file name, Index, Number of numeric digits to use]


/*****************************
Resolves local path to full path Output: Full path.

Example:

[FileNameResolvePath, LargeImage.psd]

returns the full path of the “LargeImage.psd” file which is located within the same
directory as the executing ZScript

[FileNameResolvePath, ]

returns the full path to the executing ZScript

*****************************/
[FileNameResolvePath, Local File Name]


/*****************************
Pre-sets the file name that will be used in the next Save/Load action

Example:

[FileNameSetNext, LargeImage.psd]

sets “LargeImage.psd” as the next file name that will be used in a Save/Load action

[FileNameSetNext, [FileNameMake, Image.psd, 23, 4]]

sets “Image0023.psd” as the next file name that will be used in a Save/Load action

*****************************/
[FileNameSetNext, File name including the extension (such as .psd ). If omitted the stored
file name will be cleared.]


/*****************************
Executes a Shell command

Example:

[ShellExecute, "open image.psd"]

opens file named “image.psd” in the default PSD editor.


*****************************/
[ShellExecute, the Shell command]


/*****************************
Performs time-based interpolation Output: Interpolated value or list

Example:

[Interpolate, 0.25, startx, endx]

returns an interpolated value (startX*(1.0-0.25))+(endX*0.25)

[Interpolate, 0.25, list1, list2, list3]

returns an interpolated list calculated as a spline at t=.25

*****************************/
[Interpolate, Time (0:AtStart 0.5:half 1:AtEnd), Value1 (Num, VarName or ListName), Value2
(Num, VarName or ListName), Value3 (Num, VarName or ListName), Value4 (Num, VarName or
ListName), Angle interpolation (0:no(default), 1:yes )]


/*****************************
(ZScript debugging helper) aborts execution if specified condition is not true

Example:

[Assert, [Var, a]<10, "Something is wrong"]

Checks the value of variable “a” and if it is smaller than 10 then displays a message
“Something is wrong” and aborts the execution of the ZScript

*****************************/
[Assert, True Or False Evaluation, Message that will be shown if the first input is false
(zero)]


/*****************************
Delays execution of ZScript for specified amount of time (Sub-Level only).

Example:

[Delay, 1]

Delays 1 second

[Delay, 0.010]

Delays 10 milliseconds

*****************************/
[Delay, Delay (in seconds)]


/*****************************
Provides conditional execution of a commands group (can be placed anywhere).

Example:

[If, MyVariable < 10, [MessageOk, LessThanl0], [MessageOk, l0orMore]]

Checks the variable “MyVariable” and displays a message “LessThanl0” if the value is less
than 10 and displays “l0orMore” otherwise

*****************************/
[If, True Or False Evaluation, Commands group to be executed if true (not zero), Commands
group to be executed if false (is zero)]


/*****************************
Disables interface updates.

Example:

[IFreeze, ...]

Execute inner commands without updating the interface to increase execution speed

*****************************/
[IFreeze, Commands group to be executed without updating the interface]


/*****************************
Repeats execution of the specified commands group

Example:

[Loop, 5, [MessageOK, Hi]]

Displays a message box 5 times

[Loop, n, [VarSet, a, a+1]]

repeats the process of adding 1 to variable a, n times

*****************************/
[Loop, RepeatCount, Commands group, Optional loop-counter variable (starts at Zero)]


/*****************************
Executes the specified defined routine (can be placed anywhere).

Example:

[RoutineCall, testing]

Executes a routine named “testing”

*****************************/
[RoutineCall, Name of the routine to be called, Input Var01, Input Var02, Input Var03,
Input Var04, Input Var05, Input Var06, Input Var07, Input Var08, Input Var09, Input Var10]


/*****************************
Defines a named commands group (can be placed anywhere but generally Top Level).

Example:

[RoutineDef, testing, [MessageOk, Hi][MessageOk, There]]

Creates a routine named “testing” that when called will display 2 messages to the user
(“Hi” and then “There”).

*****************************/
[RoutineDef, Name of the routine, Commands group that will be executed when the routine is
called, Input Var01, Input Var02, Input Var03, Input Var04, Input Var05, Input Var06,
Input Var07, Input Var08, Input Var09, Input Var10]


/*****************************
Exists ZScript and be awaken by specified event (can be placed anywhere).

Example:

[Sleep, 100, [Note, "LButton pressed"], 4]

Sleeps until awakened when left mouse button clicked.

*****************************/
[Sleep, Sleep amount in seconds, Commands group to execute when awaken, Optional event
(default:1) (1:Timer 2:Mouse Moved 4:LButton down 8:LButton up 16:KeyDown 32:keyUp
64:ModifierKeyDown 128:ModifierKeyUp 256:Startup 512:Shut down 1024:InterfaceItem
pressed/unpressed 2048:tool selected 4096:texture selected 8192:alpha selected), Optional
output variable which will contain the event code that has awaken the ZScript, Optional
output variable which will contain the ID of the window pointed by the mouse]


/*****************************
Exists ZScript and continues the Sleep command (Sub-Level only).

Example:

[SleepAgain]

Sleeps again.

*****************************/
[SleepAgain, Optional new Sleep amount in seconds (default:unchanged), Optional event
(default:unchanged) (1:Timer 2:Mouse Moved 4:LButton down 8:LButton up 16:KeyDown 32:keyUp
64:ModifierKeyDown 256:Startup 512:Shut down 1024:InterfaceItem post pressed/unpressed
2048:tool selected 4096:texture selected 8192 alpha selected)]


/*****************************
Inserts all the text and commands of an entire ZScript file. Not strictly a zscript
command, it is the only one that does not have square brackets.

Example:

<zscriptinsert, "MyZscript.txt">

Inserts the entire contents of MyZScript.txt at that point of the zscript. When the
zscript is compiled the inserted zscript is included and no further reference is made to
the separate file. Useful in some circumstances but can make code difficult to understand.
Also note that commenting out can have unpredictable results.

*****************************/
<zscriptinsert, "Filename.txt">


/*****************************
Copies data from one memory block into another. Output: Returns the number of bytes moved.
(-1 indicates an error)

Example:

[MemCopy, FromMemBlock, 1000, ToMemBlock, 2000, 10000]

Moves 10, 000 bytes from FromMemBlock offset 1000 to ToMemBlock offset 2000. Returns the
mumber of bytes moved.

*****************************/
[MemCopy, From Mem block identifier, From offset, To Mem block identifier, To offset,
Number of bytes to move (if omitted, max possible number of bytes will be copied)]


/*****************************
Creates a new memory block. Output: Returns the size of the new memory block or error
code…0=Error -1=Memory already exists -2=Can’t create memory block.

Example:

[MemCreate, myTempData, 1000, 0]

Creates a new data block named myTempData of 1000 bytes in size, clears it to 0 and
returns the Mem size. Returns 0 if data block could not be created.

*****************************/
[MemCreate, Mem block identifier, Mem block requested size, Initial fill? (omitted: noFill
- faster to create)]


/*****************************
Creates a new memory block from a disk file. Output: Returns the size of the new memory
block or error code…0=Error -1=Memory already exists -2=Can’t create memory block -3=File
not found.

Example:

[MemCreateFromFile, myTempData, mesh.obj]

Loads the content of “mesh.obj” file into a new data block named “myTempData” and returns
the memory block size. Returns zero if error encountered.

*****************************/
[MemCreateFromFile, Mem block identifier, File name including the extension (such as
brush1.ztl ), Optional start file offset for partial file read (default:0), Optional max
bytes to read (default:all file)]


/*****************************
Deletes a memory block. Output: Returns the size of the deleted memory block. Returns 0 if
memory block could not be found.

Example:

[MemDelete, myTempData]

Deletes “myTempData” memory block. Be sure to delete memory blocks when you have finished
with them, so as to free memory.

*****************************/
[MemDelete, Data block identifier]


/*****************************
Returns the size of a memory block (Also useful for determining if a memory block already
exists. Output: Returns the size of the memory block. Returns 0 if data block could not be
found.

Example:

[MemGetSize, myTempData]

Returns the size of the “myTempData” memory block.

*****************************/
[MemGetSize, Memory block identifier]


/*****************************
Move data within an existing memory block. Output: Returns the mumber of bytes moved.

Example:

[MemMove, myTempData, 1000, 2000, 10000]

Moves 10, 000 bytes from offset 1000 to start at offset 2000. Returns the number of bytes
moved.

*****************************/
[MemMove, Mem block identifier, From offset, To offset, Number of bytes to move]


/*****************************
Write data to a memory block. Output: Returns the number of actual bytes written

Example:

[MemMultiWrite, myTempData, 4, 12, 3, 5, 100]

Writes 5 times the value ‘4’ as “signed short” value into “MyTempData” starting at memory
offsets “12”, “112”, “212”, “312” and “412”.

*****************************/
[MemMultiWrite, Mem block identifier, Value to write, Data format (0:omitted:float
1:signed char 2:unsigned char 3:signed short 4:unsigned short 5:signed long 6:unsigned
long 7:fixed16 (16.16)), Offset (in bytes) into memory block, Repeat count, Offset (in
bytes) to subsequent writes]


/*****************************
Reads data from a memory block. Output: Returns the number of actual bytes read

Example:

[MemRead, myTempData, width, 12, 3]

Reads the value from “MyTempData” at memory offset “12” as “signed short” and stores in
variable “width”.

*****************************/
[MemRead, Mem block identifier, Read variable, Data format (0:omitted:float 1:signed char
2:unsigned char 3:signed short 4:unsigned short 5:signed long 6:unsigned long 7:fixed16
(16.16)), Offset (in bytes) into memory block]


/*****************************
Reads a string from a memory block. Output: Returns the number of bytes scanned. (may be
larger than the actual bytes read)

Example:

[MemReadString, myTempData, tempText, 12, 1]

Reads a string from “myTempData” memory block to variable “tempText”, starting at memory
offset l2 and break at the end of the line.

*****************************/
[MemReadString, Mem block identifier, The string variable, Offset (in bytes) into memory
block, Break at line end? (default:no), Skip white space? (default:no), Max read length 1
- 255(default)]


/*****************************
Resizes an exsiting memory block. Output: Returns the new size of the memory block. Zero
indicates an error.

Example:

[MemResize, myTempData, 1000]

Resizes the memory block “myTempData” to 1000 bytes in size. Returns 0 if data block could
not be resized.

*****************************/
[MemResize, Mem block identifier, New size, Optional byte value to fill the newly added
memory? (omitted:no)]


/*****************************
Saves an exisiting memory block to a disk file. Output: Returns the size of the new memory
block or error code…0=Error -1=Memory does not exist -2=File already exists -3=File write
error.

Example:

[MemSaveToFile, myTempData, "mesh.obj"]

Saves the content of “myTempData” memory block into a disk file named “mesh.obj” and
returns the number of written bytes. Doesn’t overwrite as existing file of the same name.
Returns zero if error encountered.

[MemSaveToFile, myTempData, "mesh.obj",1]

Saves the content of “myTempData” memory block into a disk file named “mesh.obj” and
returns the number of written bytes. Overwrites an existing file of the same name. Returns
zero if error encountered.

*****************************/
[MemSaveToFile, Mem block identifier, File name including the extension (such as
brush1.ztl ), Overwrite if exists? Set to a value (including 0) to save the file even if
an identically named file already exists on disk - Default (no argument): do not
overwrite]


/*****************************
Write data to a memory block. Output: Returns the number of actual bytes written

Example:

[MemWrite, myTempData, 4, 12, 3]

Writes the value “4” as “signed short” value into “MyTempData” starting at memory offsets
“12”.

*****************************/
[MemWrite, Mem block identifier, Value to write, Data format (0:omitted:float 1:signed
char 2:unsigned char 3:signed short 4:unsigned short 5:signed long 6:unsigned long
7:fixed16 (16.16)), Offset (in bytes) into memory block]


/*****************************
Writes a string into a memory block. Output: Returns the number of bytes written.
(including the terminating zero)

Example:

[MemWriteString, myTempData, "Hello There", 12]

Writes “Hello There” string starting at memory offset l2 and break at the end of the line.

*****************************/
[MemWriteString, Mem block identifier, The string, Offset (in bytes) into memory block,
Write terminating zero char (if omitted:yes)]


/*****************************
Gets current transformation values into an existing memory block (Sub-Level only).

Example:

[MTransformGet, MyDataBlock, 1]

store the current 9 transformation values into “MyDataBlock” memory block starting at
variable index 1.

*****************************/
[MTransformGet, Mem block identifier, Optional variable index (default:0)]


/*****************************
Sets new transformation values from an existing memory block (Sub-Level only).

Example:

[MTransformSet, MyDataBlock, 1]

Sets all 9 transformation values from “MyDataBlock” memory block starting at variable
index 1

*****************************/
[MTransformSet, Mem block identifier, Optional variable index (default:0)]


/*****************************
Defines a new variables memory block. Output: Returns the variables count of the new
memory block or error code…0=Error -1=Memory already exists -2=Can’t create memory block.

Example:

[MVarDef, myTempData, 1000, 0]

Creates a new data block named myTempData of 1000 variables in size, clear it to 0 and
return the variables count. Returns 0 if data block could not be created.

*****************************/
[MVarDef, Mem block identifier, Mem block variables count, Initial fill? (omitted:noFill -
faster to create)]


/*****************************
Reads a float value from a memory block. Output: Returns the float value.

Example:

[MVarGet, myTempData, 1]

Returns the 2nd float value from the “MyTempData” memory block.

*****************************/
[MVarGet, Mem block identifier, Variable index (0 based)]


/*****************************
Writes a float value to a memory block. Output: Returns the old value of the variable.

Example:

[MVarSet, myTempData, 1, 4]

Sets the 2nd float value of the “MyTempData” memory block to 4.

*****************************/
[MVarSet, Mem block identifier, Variable index (0 based), The value to write]


/*****************************
Plays the sounds loaded into a specified memory block. Output: Returns the zero if command
executed successfully (Sub-Level only).

Example:

[SoundPlay, SayHello]

Plays the “SayHello” memory block.

*****************************/
[SoundPlay, Mem block identifier, Optional play mode (0:Play once, don't wait for
completion (default); 1:Play once, wait for completion; 2:Play loop, don't wait for
completion)]


/*****************************
Stops the currently specified sound. Output: Returns the zero if command executed
successfully (Sub-Level only).

Example:

[Soundstop, SayHello]

Stops playback of the “SayHello” memory block.

*****************************/
[SoundStop, Mem block identifier]


/*****************************
Gets current Transpose Action Line values (<strong>Sub-Level</strong> only).

Example:

[TransposeGet, xPos, yPos, zPos]

Sets the variables xPos, yPos and zPos to the 3D position values of the start of the
transpose action line.

*****************************/
[TransposeGet, Start xPos, Start yPos, Start zPos, End xPos, End yPos, End zPos, Action
Line Length, x of red axis, y of red axis, z of red axis, x of green axis, y of green axis,
, z of green axis, x of blue axis, y of blue axis, z of blue axis]


/*****************************
Add a new point to the specified curve (<strong>Sub-Level</strong> only). Output: Returns
the point index (zero based) or -1 if failed.

Example:

[CurveAddPoint, 1,1,2,3]

Appends a new point (x=1,y=2,z=3) to the second curve in the list.

*****************************/
[CurveAddPoint, Curve Index (zero based), x position, y position, z position]


/*****************************
Creates a mesh from the current curves (<strong>Sub-Level</strong> only). Output: Returns
the number of points in the new mesh. zero=error, -1=file exists.

Example:

[CurvesCreateMesh, myCurveMesh, 1, 10]

Creates a mesh of 10 units thickness from the current curves and appends it as a new
subtool named ‘myCurveMesh’.

*****************************/
[CurvesCreateMesh, Name,  Action (0(default): Append mesh to the active mesh, 1: Add as a
new subtool, 2: Export OBJ file if file does not exist, 3: Export Obj file and overwrite
if exists),  Thickness (zero: single side mesh)]


/*****************************
Deletes named curves list (Sub-Level only).

Example:

[CurvesDelete, myCurves]

Deletes curves list named ‘myCurves’.

*****************************/
[CurvesDelete, name]


/*****************************
Creates a new curves list (<strong>Sub-Level </strong>only).

Example:

[CurvesNew, myCurves]

Creates a new curve list named ‘myCurves’.

*****************************/
[CurvesNew, name]


/*****************************
Creates DisplacementMap Output: Returns zero if executed successfully. Any other value
indicates an error

Example:

[DispMapCreate, 1024, 1024, 1, 7, 2]

Creates a DispMap, image size 1024×124, smooth=yes, border=7, UVTi1e index=2

*****************************/
[DispMapCreate, Image Width, Image Height, Smooth (default:yes), SubPoly (default:0),
Border (default:8), UVTile index (default:ignores UV tiles)]


/*****************************
Gets information about the currently active Mesh3D tool. Output: Returns zero if command
executed successfully, any other value indicates and error (Sub-Level only).

Example:

[Mesh3DGet, 0]

returns the number of vertices.

*****************************/
[Mesh3DGet, Property: (0:PointsCount 1:FacesCount 2:XYZ bounds 3:UVBounds 4:1stUVTile
5:NxtUVTile 6:PolysInUVTile 7:3DAreaOfUVTile 8:Full3DMeshArea), Optional input 1
Vertix/Face/Group/UVTile H index (0 based), Optional input 2, Optional output variable1,
Optional output variable2, Optional output variable3, Optional output variable4, Optional
output variable5, Optional output variable6, Optional output variable7, Optional output
variable8]


/*****************************
Creates NormalMap Output: Returns zero if executed successfully. Any other value indicates
an error

Example:

[NormalMapCreate, 1024, 1024, 1, 7, 2]

Creates a Normal Map, image size 1024×124, smooth=yes, border=7, UVTi1e index=2.

*****************************/
[NormalMapCreate, Image Width, Image Height, Smooth (default:yes), SubPoly (default:0),
Border (default:8), UVTile index (default:ignores UV tiles), Local(tangent) coordinates?
(default:world coordinates)]


/*****************************
Adds new ZSphere to the currently active ZSpheres tool Output: Returns the the index of
the new ZSphere or -1 if command failed (Sub-Level only).

Example:

[ZSphereAdd, 0, .5, 1, .1, 0]

Adds a ZSphere located at (0, 0.5, 1) with 0.1 radius and ZSphere #0 as the parent.

*****************************/
[ZSphereAdd, xPos, yPos, zPos, Radius, Parent index (0 based), Optional Color
0x000000&lt;-&gt;0xffffff (RED*65536)+(GREEN*256)+BLUE, Optional Mask (0:unmasked to
255:fully masked), Optional TimeStamp, Optional Flags (0:default, 1:invisible link to
parent)]


/*****************************
Deletes a ZSphere from the currently active ZSpheres tool Output: Returns zero if command
executed successfully (Sub-Level only).

Example:

[ZSphereDel, 2]

Deletes the 3rd ZSphere.

*****************************/
[ZSphereDel, ZSphere index (Sphere 0 can't be deleted)]


/*****************************
Prepares the currently active ZSpheres tool for ZScript editing session. Output: Returns
the zero if command executed successfully.

Example:

[ZSphereEdit, ...commands...]

begins ZSphere edit session and executes …commands…

*****************************/
[ZSphereEdit, ZSpheres editing commands, Store undo? (0:Skip Undo, 1:Store undo)]


/*****************************
Gets information about the currently active ZSpheres tool. (Must be placed within
ZSphereEdit command) Output: Returns the value of the specified property (Sub-Level only).

Example:

[ZSphereGet, 0]

returns the number of ZSpheres.

[ZSphereGet, 2, 1]

returns the Y position of the 2nd ZSphere.

*****************************/
[ZSphereGet, Property: 0:ZSpheres count, 1:xPos, 2:yPos, 3:zPos, 4:radius, 5:color, 6:mask,
, 7:ParentIndex(-1:none), 8:LastClickedIndex(-1:none), 9:TimeStamp, 10:ChildsCount,
11:ChildIndex (2nd index), 12:TimeStampCount, 13:TimeStampIndex, 14:flags, 15:Twist Angle,
16:Membrane, 17:X Res, 18:Y Res, 19:Z Res, Optional ZSphere index (0 based), Optional 2nd
index (0 based)]


/*****************************
Modifies a property of the currently active ZSpheres tool. (Must be placed within
ZSphereEdit command) Output: Returns zero if command executed successfully (Sub-Level
only).

Example:

[ZSphereSet, 4, 6, .5]

sets the radius of ZSphere index 6 to 0.5.

*****************************/
[ZSphereSet, Property: 0:unused, 1:xPos, 2:yPos, 3:zPos, 4:radius, 5:color, 6:mask,
7:ParentIndex, 8:unused, 9:TimeStamp, 10:unused, 11:unused, 12:unused, 13:unused, 14:flags,
, 15:Twist Angle, 16:Membrane, 17:X Res, 18:Y Res, 19:Z Res, 20:XYZ Res, 21:UserValue,
ZSphere index (0 based), New property value]


